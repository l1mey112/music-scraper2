import * as schema from "./schema"

// stop polluting my namespace (it's not possible to import * as ...)
// spotify v1 api
import { Album, Artist, AudioFeatures, SimplifiedTrack, Track } from "@spotify/web-api-ts-sdk"

// {"name": "cosMo@Bousou-P"}
// {"name": "cosMo@Bousou-P", "locale": "en-US"}
// {"name": "cosMo@暴走P", "locale": "ja-JP"}
export type Locale = { name: string, locale?: string }

export type TrackId = number
export type AlbumId = number

export type ArtistId = number
export type MediaId = number

export type TrackEntry = typeof schema.track.$inferInsert
export type AlbumEntry = typeof schema.album.$inferInsert
export type ArtistEntry = typeof schema.artist.$inferInsert

export type SpotifyTrack = Track
export type SpotifyAudioFeatures = AudioFeatures
export type SpotifyAlbum = Omit<Album, 'tracks'> // trim the fat
export type SpotifyAlbumTrack = SimplifiedTrack[] // pagination unwrapped
export type SpotifyArtist = Artist
export type SpotifyId = string
export type QobuzId = number
export type DeezerId = number
export type Isrc = string
export type YoutubeId = string

// autogenerated using `json-to-typescript` from "MONEY ON THE DASH - ACAPELLA"  (qobuz_id: 252881807)
// good for now, not really using this that much
// TODO: grab a ton of these and generate a better type
export type QobuzTrack = {
	maximum_bit_depth: number
	copyright: string
	performers: string
	audio_info: {
		replaygain_track_gain: number
		replaygain_track_peak: number
	}
	performer: {
		id: number
		name: string
	}
	album: {
		maximum_bit_depth: number
		image: {
			small: string
			thumbnail: string
			large: string
			back: string | null
		}
		media_count: number
		artist: {
			image: any
			name: string
			id: number
			albums_count: number
			slug: string
			picture: any
		}
		artists: Array<{
			id: number
			name: string
			roles: Array<string>
		}>
		upc: string
		released_at: number
		label: {
			name: string
			id: number
			albums_count: number
			supplier_id: number
			slug: string
		}
		title: string
		qobuz_id: number
		version: any
		url: string
		duration: number
		parental_warning: boolean
		popularity: number
		tracks_count: number
		genre: {
			path: Array<number>
			color: string
			name: string
			id: number
			slug: string
		}
		maximum_channel_count: number
		id: string
		maximum_sampling_rate: number
		articles: Array<any>
		release_date_original: string
		release_date_download: string
		release_date_stream: string
		purchasable: boolean
		streamable: boolean
		previewable: boolean
		sampleable: boolean
		downloadable: boolean
		displayable: boolean
		purchasable_at: number
		streamable_at: number
		hires: boolean
		hires_streamable: boolean
		awards: Array<any>
		goodies: Array<any>
		area: any
		catchline: string
		composer: {
			id: number
			name: string
			slug: string
			albums_count: number
			picture: any
			image: any
		}
		created_at: number
		genres_list: Array<string>
		period: any
		copyright: string
		is_official: boolean
		maximum_technical_specifications: string
		product_sales_factors_monthly: number
		product_sales_factors_weekly: number
		product_sales_factors_yearly: number
		product_type: string
		product_url: string
		recording_information: string
		relative_url: string
		release_tags: Array<any>
		release_type: string
		slug: string
		subtitle: string
		description: string
	}
	work: any
	composer: {
		id: number
		name: string
	}
	isrc: string
	title: string
	version: string
	duration: number
	parental_warning: boolean
	track_number: number
	maximum_channel_count: number
	id: number
	media_number: number
	maximum_sampling_rate: number
	articles: Array<any>
	release_date_original: string
	release_date_download: string
	release_date_stream: string
	release_date_purchase: string
	purchasable: boolean
	streamable: boolean
	previewable: boolean
	sampleable: boolean
	downloadable: boolean
	displayable: boolean
	purchasable_at: number
	streamable_at: number
	hires: boolean
	hires_streamable: boolean
}

// autogenerated using `json-to-typescript` from "Someone New"  (deezer_id: 2286535477)
// good for now actually, no nulls
export type DeezerTrack = {
	id: number
	readable: boolean
	title: string
	title_short: string
	title_version: string
	isrc: string
	link: string
	share: string
	duration: number
	track_position: number
	disk_number: number
	rank: number
	release_date: string
	explicit_lyrics: boolean
	explicit_content_lyrics: number
	explicit_content_cover: number
	preview: string
	bpm: number
	gain: number
	available_countries: Array<string>
	contributors: Array<{
		id: number
		name: string
		link: string
		share: string
		picture: string
		picture_small: string
		picture_medium: string
		picture_big: string
		picture_xl: string
		radio: boolean
		tracklist: string
		type: string
		role: string
	}>
	md5_image: string
	artist: {
		id: number
		name: string
		link: string
		share: string
		picture: string
		picture_small: string
		picture_medium: string
		picture_big: string
		picture_xl: string
		radio: boolean
		tracklist: string
		type: string
	}
	album: {
		id: number
		title: string
		link: string
		cover: string
		cover_small: string
		cover_medium: string
		cover_big: string
		cover_xl: string
		md5_image: string
		release_date: string
		tracklist: string
		type: string
	}
	type: string
}
